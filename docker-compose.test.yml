services:
  postgres-test:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: mmuser
      POSTGRES_PASSWORD: mmuser_password
      POSTGRES_DB: mattermost_test
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mmuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  mattermost-test:
    image: mattermost/mattermost-team-edition:7.8
    depends_on:
      postgres-test:
        condition: service_healthy
    environment:
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: postgres://mmuser:mmuser_password@postgres-test:5432/mattermost_test?sslmode=disable&connect_timeout=10
      MM_SERVICESETTINGS_SITEURL: http://localhost:8066
      MM_TEAMSETTINGS_ENABLEOPENSERVER: true
      MM_SERVICESETTINGS_ENABLEDEVELOPER: true
      MM_PLUGINSETTINGS_ENABLEUPLOADS: true
      MM_PLUGINSETTINGS_ALLOWINSECUREDOWNLOADURL: true
      MM_SERVICESETTINGS_ALLOWCORSFROM: "*"
      # Enable bot accounts and tokens for testing
      MM_SERVICESETTINGS_ENABLEBOTACCOUNTCREATION: true
      MM_SERVICESETTINGS_ENABLEUSERACCESSTOKENS: true
      # Make setup easier for testing
      MM_INSTALL_TYPE: docker
    ports:
      - "8066:8065"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8065/api/v4/system/ping"]
      interval: 30s
      timeout: 10s
      retries: 10

networks:
  test-network:
    driver: bridge

volumes:
  postgres_test_data: 