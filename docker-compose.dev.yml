services:
  postgres-dev:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: mmuser
      POSTGRES_PASSWORD: mmuser_password
      POSTGRES_DB: mattermost_dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Expose for local debugging if needed
    networks:
      - dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mmuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  mattermost-dev:
    image: mattermost/mattermost-team-edition:7.8
    depends_on:
      postgres-dev:
        condition: service_healthy
    environment:
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: postgres://mmuser:mmuser_password@postgres-dev:5432/mattermost_dev?sslmode=disable&connect_timeout=10
      MM_SERVICESETTINGS_SITEURL: http://localhost:8065
      MM_TEAMSETTINGS_ENABLEOPENSERVER: true
      MM_SERVICESETTINGS_ENABLEDEVELOPER: true
      MM_PLUGINSETTINGS_ENABLEUPLOADS: true
      MM_PLUGINSETTINGS_ALLOWINSECUREDOWNLOADURL: true
      MM_SERVICESETTINGS_ALLOWCORSFROM: "*"
      # Enable bot accounts and tokens for development
      MM_SERVICESETTINGS_ENABLEBOTACCOUNTCREATION: true
      MM_SERVICESETTINGS_ENABLEUSERACCESSTOKENS: true
      MM_INSTALL_TYPE: docker
      # Development settings
      MM_LOGSETTINGS_ENABLECONSOLE: true
      MM_LOGSETTINGS_CONSOLELEVEL: DEBUG
    ports:
      - "8065:8065"
    networks:
      - dev-network
    volumes:
      - mattermost_data:/mattermost/data
      - mattermost_logs:/mattermost/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8065/api/v4/system/ping"]
      interval: 30s
      timeout: 10s
      retries: 10

networks:
  dev-network:
    driver: bridge

volumes:
  postgres_dev_data:
  mattermost_data:
  mattermost_logs: 